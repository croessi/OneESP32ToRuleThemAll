defaults:
  target: "Kessel"

sensor:
  - platform: template
    name: ${property}
    id: ${property}
    unit_of_measurement: ${unit}
    icon: "mdi:heating-coil"
    state_class: "measurement"
    accuracy_decimals: 0
    update_interval: $interval_once_in_a_while
    filters:
        - throttle: $interval_once_in_a_while
    lambda: |-
        queueRequest(${target}, propertyManager.getPropertyAddress("k${property}"));
        return {};

esphome:
  on_boot:
    priority: -100
    then:
      - lambda: |-
          CallbackHandler::instance().addCallback(std::make_pair(${target},propertyManager.getPropertyAddress("k${property}")),[](const SimpleVariant& value) {
            publishValue(id(${property}), value);
          });               
          queueRequest(${target}, propertyManager.getPropertyAddress("k${property}"));
