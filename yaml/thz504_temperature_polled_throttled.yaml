defaults:
  interval: $interval_very_slow
  delta: "1.0"
  target: "Kessel"

sensor:
  - platform: template
    name: ${property}
    id: ${property}
    unit_of_measurement: "Â°C"
    icon: "mdi:thermometer-lines"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 1
    update_interval: ${interval}
    filters:
      - or:
        - throttle: ${interval}
        - delta: ${delta}
    lambda: |-
        queueRequest(${target}, propertyManager.getPropertyAddress("k${property}"));
        return {};

esphome:
  on_boot:
    priority: -100
    then:
      - lambda: |-
          CallbackHandler::instance().addCallback(std::make_pair(${target},propertyManager.getPropertyAddress("k${property}")),[](const SimpleVariant& value) {
            publishValue(id(${property}), value);
          });               
          queueRequest(${target}, propertyManager.getPropertyAddress("k${property}"));
